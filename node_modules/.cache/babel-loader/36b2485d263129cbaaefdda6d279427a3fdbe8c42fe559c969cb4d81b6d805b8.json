{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      customer: {\n        name: '',\n        contact: '',\n        address: ''\n      },\n      products: [],\n      // All products from the backend\n      bill: [],\n      // Products added to the bill\n      subtotal: 0,\n      tax: 0,\n      total: 0,\n      newProduct: {\n        name: '',\n        description: '',\n        price: '',\n        category: '',\n        photo: null\n      },\n      productPhoto: null\n    };\n  },\n  created() {\n    this.fetchProducts();\n  },\n  methods: {\n    async fetchProducts() {\n      try {\n        const response = await axios.get('/api/product');\n        this.products = response.data.data;\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    },\n    // Handle file selection for product photo\n    onFileChange(e) {\n      this.productPhoto = e.target.files[0];\n    },\n    // Add product to the backend\n    async addProduct() {\n      const formData = new FormData();\n      formData.append('name', this.newProduct.name);\n      formData.append('description', this.newProduct.description);\n      formData.append('price', this.newProduct.price);\n      formData.append('category_id', this.newProduct.category); // Assuming category ID is being sent\n      if (this.productPhoto) {\n        formData.append('photo', this.productPhoto);\n      }\n      try {\n        await axios.post('/api/product/create', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        this.fetchProducts(); // Reload product list\n        this.resetNewProductForm(); // Clear form\n      } catch (error) {\n        console.error('Error adding product:', error);\n      }\n    },\n    resetNewProductForm() {\n      this.newProduct = {\n        name: '',\n        description: '',\n        price: '',\n        category: '',\n        photo: null\n      };\n      this.productPhoto = null;\n    },\n    // Add selected product to bill\n    addToBill(product) {\n      const existingProduct = this.bill.find(item => item.id === product.id);\n      if (existingProduct) {\n        existingProduct.qty += 1;\n      } else {\n        this.bill.push({\n          ...product,\n          qty: 1\n        });\n      }\n      this.updateSummary();\n    },\n    updateSummary() {\n      this.subtotal = this.bill.reduce((sum, product) => sum + product.qty * product.price, 0);\n      this.tax = this.subtotal * 0.05;\n      this.total = this.subtotal + this.tax;\n    },\n    generateBill() {\n      this.$router.push('/invoice');\n    }\n  }\n};","map":{"version":3,"names":["axios","data","customer","name","contact","address","products","bill","subtotal","tax","total","newProduct","description","price","category","photo","productPhoto","created","fetchProducts","methods","response","get","error","console","onFileChange","e","target","files","addProduct","formData","FormData","append","post","headers","resetNewProductForm","addToBill","product","existingProduct","find","item","id","qty","push","updateSummary","reduce","sum","generateBill","$router"],"sources":["H:\\vue\\vue_inventory\\src\\components\\Bill.vue"],"sourcesContent":["<template>\r\n    <div class=\"billing-container\">\r\n      <header class=\"header\">\r\n        <h1>Billing System</h1>\r\n        <p>Inventory Management</p>\r\n      </header>\r\n  \r\n      <!-- Customer Details Section -->\r\n      <section class=\"customer-details\">\r\n        <h2>Customer Information</h2>\r\n        <label for=\"customer-name\">Name:</label>\r\n        <input type=\"text\" v-model=\"customer.name\" placeholder=\"Enter Customer Name\">\r\n        <label for=\"customer-contact\">Contact:</label>\r\n        <input type=\"text\" v-model=\"customer.contact\" placeholder=\"Enter Contact Number\">\r\n        <label for=\"customer-address\">Address:</label>\r\n        <textarea v-model=\"customer.address\" placeholder=\"Enter Address\"></textarea>\r\n      </section>\r\n  \r\n      <!-- Add New Product Form -->\r\n      <section class=\"add-product-form\">\r\n        <h2>Add New Product</h2>\r\n        <label for=\"product-name\">Product Name:</label>\r\n        <input type=\"text\" v-model=\"newProduct.name\" placeholder=\"Enter Product Name\">\r\n        <label for=\"product-description\">Description:</label>\r\n        <textarea v-model=\"newProduct.description\" placeholder=\"Enter Product Description\"></textarea>\r\n        <label for=\"product-price\">Price:</label>\r\n        <input type=\"number\" v-model=\"newProduct.price\" placeholder=\"Enter Product Price\" min=\"0\">\r\n        <label for=\"product-category\">Category:</label>\r\n        <input type=\"text\" v-model=\"newProduct.category\" placeholder=\"Enter Product Category\">\r\n        <label for=\"product-photo\">Photo:</label>\r\n        <input type=\"file\" @change=\"onFileChange\" accept=\"image/*\">\r\n        <button @click=\"addProduct\">Add Product</button>\r\n      </section>\r\n  \r\n      <!-- Product List Section -->\r\n      <section class=\"product-list\">\r\n        <h2>Products</h2>\r\n        <table id=\"product-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Product Name</th>\r\n              <th>Qty</th>\r\n              <th>Price</th>\r\n              <th>Total</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"product in products\" :key=\"product.id\">\r\n              <td>{{ product.name }}</td>\r\n              <td>\r\n                <input type=\"number\" v-model=\"product.qty\" :min=\"1\" @input=\"updateTotal(product)\" placeholder=\"1\">\r\n              </td>\r\n              <td>{{ product.price }}</td>\r\n              <td>{{ product.qty * product.price }}</td>\r\n              <td>\r\n                <button @click=\"addToBill(product)\">Add to Bill</button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n  \r\n      <!-- Billing Summary Section -->\r\n      <section class=\"billing-summary\">\r\n        <h2>Billing Summary</h2>\r\n        <p><strong>Subtotal:</strong> <span id=\"subtotal\">{{ subtotal }}</span></p>\r\n        <p><strong>Tax (5%):</strong> <span id=\"tax\">{{ tax }}</span></p>\r\n        <p><strong>Total Amount:</strong> <span id=\"total\">{{ total }}</span></p>\r\n        <button id=\"generate-bill\" @click=\"generateBill\">Generate Bill</button>\r\n      </section>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        customer: {\r\n          name: '',\r\n          contact: '',\r\n          address: ''\r\n        },\r\n        products: [],  // All products from the backend\r\n        bill: [], // Products added to the bill\r\n        subtotal: 0,\r\n        tax: 0,\r\n        total: 0,\r\n        newProduct: {\r\n          name: '',\r\n          description: '',\r\n          price: '',\r\n          category: '',\r\n          photo: null\r\n        },\r\n        productPhoto: null\r\n      };\r\n    },\r\n    created() {\r\n      this.fetchProducts();\r\n    },\r\n    methods: {\r\n      async fetchProducts() {\r\n        try {\r\n          const response = await axios.get('/api/product');\r\n          this.products = response.data.data;\r\n        } catch (error) {\r\n          console.error('Error fetching products:', error);\r\n        }\r\n      },\r\n      \r\n      // Handle file selection for product photo\r\n      onFileChange(e) {\r\n        this.productPhoto = e.target.files[0];\r\n      },\r\n  \r\n      // Add product to the backend\r\n      async addProduct() {\r\n        const formData = new FormData();\r\n        formData.append('name', this.newProduct.name);\r\n        formData.append('description', this.newProduct.description);\r\n        formData.append('price', this.newProduct.price);\r\n        formData.append('category_id', this.newProduct.category);  // Assuming category ID is being sent\r\n        if (this.productPhoto) {\r\n          formData.append('photo', this.productPhoto);\r\n        }\r\n  \r\n        try {\r\n          await axios.post('/api/product/create', formData, {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data',\r\n            },\r\n          });\r\n          this.fetchProducts(); // Reload product list\r\n          this.resetNewProductForm(); // Clear form\r\n        } catch (error) {\r\n          console.error('Error adding product:', error);\r\n        }\r\n      },\r\n  \r\n      resetNewProductForm() {\r\n        this.newProduct = { name: '', description: '', price: '', category: '', photo: null };\r\n        this.productPhoto = null;\r\n      },\r\n      \r\n      // Add selected product to bill\r\n      addToBill(product) {\r\n        const existingProduct = this.bill.find(item => item.id === product.id);\r\n        if (existingProduct) {\r\n          existingProduct.qty += 1;\r\n        } else {\r\n          this.bill.push({ ...product, qty: 1 });\r\n        }\r\n        this.updateSummary();\r\n      },\r\n  \r\n      updateSummary() {\r\n        this.subtotal = this.bill.reduce((sum, product) => sum + product.qty * product.price, 0);\r\n        this.tax = this.subtotal * 0.05;\r\n        this.total = this.subtotal + this.tax;\r\n      },\r\n  \r\n      generateBill() {\r\n        this.$router.push('/invoice');\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n\r\n<style scoped>\r\nbody {\r\n    font-family: Arial, sans-serif;\r\n    background-color: #f4f4f9;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n.billing-container {\r\n    width: 80%;\r\n    margin: 20px auto;\r\n    background-color: #fff;\r\n    padding: 20px;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.header h1 {\r\n    text-align: center;\r\n    color: #333;\r\n}\r\n\r\n.customer-details,\r\n.product-list,\r\n.billing-summary {\r\n    margin-bottom: 20px;\r\n}\r\n\r\nh2 {\r\n    color: #4CAF50;\r\n}\r\n\r\nlabel {\r\n    font-weight: bold;\r\n    margin-top: 10px;\r\n    display: block;\r\n}\r\n\r\ninput, textarea {\r\n    width: 100%;\r\n    padding: 8px;\r\n    margin: 8px 0;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n}\r\n\r\ntextarea {\r\n    resize: vertical;\r\n    height: 80px;\r\n}\r\n\r\ntable {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    margin-top: 20px;\r\n}\r\n\r\ntable, th, td {\r\n    border: 1px solid #ddd;\r\n}\r\n\r\nth, td {\r\n    padding: 10px;\r\n    text-align: center;\r\n}\r\n\r\nbutton {\r\n    background-color: #4CAF50;\r\n    color: white;\r\n    border: none;\r\n    padding: 10px 15px;\r\n    cursor: pointer;\r\n    border-radius: 4px;\r\n    font-size: 16px;\r\n    margin-top: 10px;\r\n}\r\n\r\nbutton:hover {\r\n    background-color: #45a049;\r\n}\r\n\r\nfooter {\r\n    text-align: center;\r\n    margin-top: 20px;\r\n    font-size: 14px;\r\n    color: #888;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}