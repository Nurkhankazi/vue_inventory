{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container mt-5\"\n};\nconst _hoisted_2 = {\n  class: \"table table-bordered mt-4\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[1] || (_cache[1] = _createElementVNode(\"h2\", null, \"Record Table\", -1 /* HOISTED */)), _createCommentVNode(\" Table displaying records \"), _createElementVNode(\"table\", _hoisted_2, [_cache[0] || (_cache[0] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", {\n    scope: \"col\"\n  }, \"Head\"), _createElementVNode(\"th\", {\n    scope: \"col\"\n  }, \"Date\"), _createElementVNode(\"th\", {\n    scope: \"col\"\n  }, \"Amount\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.records, (record, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(record.head), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(record.date), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(record.amount), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","_hoisted_2","scope","_Fragment","_renderList","$data","records","record","index","key","_toDisplayString","head","date","amount"],"sources":["H:\\vue\\vue_inventory\\src\\components\\ExpenseList.vue"],"sourcesContent":["<template>\r\n    <div class=\"container mt-5\">\r\n      <h2>Record Table</h2>\r\n  \r\n      \r\n     \r\n  \r\n      <!-- Table displaying records -->\r\n      <table class=\"table table-bordered mt-4\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">Head</th>\r\n            <th scope=\"col\">Date</th>\r\n            <th scope=\"col\">Amount</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(record, index) in records\" :key=\"index\">\r\n            <td>{{ record.head }}</td>\r\n            <td>{{ record.date }}</td>\r\n            <td>{{ record.amount }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        // For storing the new record input fields\r\n        newRecord: {\r\n          head: '',\r\n          date: '',\r\n          amount: ''\r\n        },\r\n        // Array to store all records\r\n        records: []\r\n      };\r\n    },\r\n    methods: {\r\n      addRecord() {\r\n        // Add the new record to the records array\r\n        this.records.push({\r\n          head: this.newRecord.head,\r\n          date: this.newRecord.date,\r\n          amount: this.newRecord.amount\r\n        });\r\n  \r\n        // Clear the form inputs after adding the record\r\n        this.newRecord.head = '';\r\n        this.newRecord.date = '';\r\n        this.newRecord.amount = '';\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* You can add custom styles here if needed */\r\n  </style>\r\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAgB;;EAOlBA,KAAK,EAAC;AAA2B;;uBAP1CC,mBAAA,CAuBM,OAvBNC,UAuBM,G,0BAtBJC,mBAAA,CAAqB,YAAjB,cAAY,sBAKhBC,mBAAA,8BAAiC,EACjCD,mBAAA,CAeQ,SAfRE,UAeQ,G,0BAdNF,mBAAA,CAMQ,gBALNA,mBAAA,CAIK,aAHHA,mBAAA,CAAyB;IAArBG,KAAK,EAAC;EAAK,GAAC,MAAI,GACpBH,mBAAA,CAAyB;IAArBG,KAAK,EAAC;EAAK,GAAC,MAAI,GACpBH,mBAAA,CAA2B;IAAvBG,KAAK,EAAC;EAAK,GAAC,QAAM,E,wBAG1BH,mBAAA,CAMQ,iB,kBALNF,mBAAA,CAIKM,SAAA,QArBfC,WAAA,CAiBwCC,KAAA,CAAAC,OAAO,EAjB/C,CAiBsBC,MAAM,EAAEC,KAAK;yBAAzBX,mBAAA,CAIK;MAJmCY,GAAG,EAAED;IAAK,IAChDT,mBAAA,CAA0B,YAAAW,gBAAA,CAAnBH,MAAM,CAACI,IAAI,kBAClBZ,mBAAA,CAA0B,YAAAW,gBAAA,CAAnBH,MAAM,CAACK,IAAI,kBAClBb,mBAAA,CAA4B,YAAAW,gBAAA,CAArBH,MAAM,CAACM,MAAM,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}