{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nexport default {\n  name: 'Bill',\n  data() {\n    return {\n      customer: {\n        name: '',\n        contact: '',\n        address: ''\n      },\n      products: [],\n      // Holds the product list fetched from API\n      selectedProduct: null,\n      // Holds the selected product for adding to the table\n      productList: [] // Holds the added products to be displayed in the table\n    };\n  },\n  computed: {\n    subtotal() {\n      return this.productList.reduce((sum, item) => sum + item.total, 0).toFixed(2);\n    },\n    tax() {\n      // Assuming a simple tax calculation of 10%\n      return (this.subtotal * 0.1).toFixed(2);\n    },\n    total() {\n      return (parseFloat(this.subtotal) + parseFloat(this.tax)).toFixed(2);\n    }\n  },\n  methods: {\n    // Fetch products from the API\n    fetchProducts() {\n      fetch('http://your-laravel-api.com/api/product') // Replace with your Laravel API endpoint\n      .then(response => response.json()).then(data => {\n        this.products = data; // Save fetched products in the `products` array\n      }).catch(error => console.error('Error fetching products:', error));\n    },\n    // Add the selected product to the product list\n    Product() {\n      if (!this.selectedProduct) return;\n      const existingProduct = this.productList.find(item => item.id === this.selectedProduct.id);\n      if (existingProduct) {\n        existingProduct.qty += 1;\n        existingProduct.total = (existingProduct.quantity * existingProduct.price).toFixed(2);\n      } else {\n        const newProduct = {\n          ...this.selectedProduct,\n          quantity: 1,\n          total: this.selectedProduct.price.toFixed(2)\n        };\n        this.productList.push(newProduct);\n      }\n    },\n    // Remove product from the product list\n    removeProduct(index) {\n      this.productList.splice(index, 1);\n    },\n    // Navigate to the bill generation page\n    generateBill() {\n      this.$router.push('/invoice');\n    }\n  },\n  created() {\n    this.fetchProducts(); // Fetch products on component creation\n  }\n};","map":{"version":3,"names":["name","data","customer","contact","address","products","selectedProduct","productList","computed","subtotal","reduce","sum","item","total","toFixed","tax","parseFloat","methods","fetchProducts","fetch","then","response","json","catch","error","console","Product","existingProduct","find","id","qty","quantity","price","newProduct","push","removeProduct","index","splice","generateBill","$router","created"],"sources":["H:\\vue\\vue_inventory\\src\\components\\Bill.vue"],"sourcesContent":["<template>\r\n    <div class=\"billing-container\">\r\n      <header class=\"header\">\r\n        <h1>Billing System</h1>\r\n        <p>Inventory Management</p>\r\n      </header>\r\n  \r\n      <!-- Customer Details Section -->\r\n      <section class=\"customer-details\">\r\n        <h2>Customer Information</h2>\r\n        <label for=\"customer-name\">Name:</label>\r\n        <input type=\"text\" v-model=\"customer.name\" placeholder=\"Enter Customer Name\">\r\n  \r\n        <label for=\"customer-contact\">Contact:</label>\r\n        <input type=\"text\" v-model=\"customer.contact\" placeholder=\"Enter Contact Number\">\r\n  \r\n        <label for=\"customer-address\">Address:</label>\r\n        <textarea v-model=\"customer.address\" placeholder=\"Enter Address\"></textarea>\r\n  \r\n        <label for=\"product-add\">Add Product:</label>\r\n        <select v-model=\"selectedProduct\" @change=\"Product\">\r\n          <option v-for=\"product in products\" :key=\"product.id\" :value=\"product\">\r\n            {{ product.name }} - ${{ product.price }}\r\n          </option>\r\n        </select>\r\n        <button @click=\"Product\">Add Product</button>\r\n      </section>\r\n  \r\n      <!-- Product List Section -->\r\n      <section class=\"product-list\">\r\n        <h2 class=\"product-details\">Product Details</h2>\r\n        <table id=\"product-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Product Name</th>\r\n              <th>Qty</th>\r\n              <th>Price</th>\r\n              <th>Total</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"(item, index) in productList\" :key=\"index\">\r\n              <td>{{ item.name }}</td>\r\n              <td>{{ item.quantity }}</td>\r\n              <td>{{ item.price }}</td>\r\n              <td>{{ item.total }}</td>\r\n              <td>\r\n                <button @click=\"removeProduct(index)\">Delete</button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n  \r\n      <!-- Billing Summary Section -->\r\n      <section class=\"billing-summary\">\r\n        <h2>Billing Summary</h2>\r\n        <p><strong>Subtotal:</strong> <span>{{ subtotal }}</span></p>\r\n        <p><strong>Tax:</strong> <span>{{ tax }}</span></p>\r\n        <p><strong>Total Amount:</strong> <span>{{ total }}</span></p>\r\n  \r\n        <button @click=\"generateBill\">Generate Bill</button>\r\n      </section>\r\n  \r\n      <!-- Footer Section -->\r\n      <footer class=\"footer\">\r\n        <p>Thank you</p>\r\n      </footer>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: 'Bill',\r\n    data() {\r\n      return {\r\n        customer: {\r\n          name: '',\r\n          contact: '',\r\n          address: ''\r\n        },\r\n        products: [], // Holds the product list fetched from API\r\n        selectedProduct: null, // Holds the selected product for adding to the table\r\n        productList: [] // Holds the added products to be displayed in the table\r\n      };\r\n    },\r\n    computed: {\r\n      subtotal() {\r\n        return this.productList.reduce((sum, item) => sum + item.total, 0).toFixed(2);\r\n      },\r\n      tax() {\r\n        // Assuming a simple tax calculation of 10%\r\n        return (this.subtotal * 0.1).toFixed(2);\r\n      },\r\n      total() {\r\n        return (parseFloat(this.subtotal) + parseFloat(this.tax)).toFixed(2);\r\n      }\r\n    },\r\n    methods: {\r\n      // Fetch products from the API\r\n      fetchProducts() {\r\n        fetch('http://your-laravel-api.com/api/product') // Replace with your Laravel API endpoint\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            this.products = data; // Save fetched products in the `products` array\r\n          })\r\n          .catch(error => console.error('Error fetching products:', error));\r\n      },\r\n  \r\n      // Add the selected product to the product list\r\n      Product() {\r\n        if (!this.selectedProduct) return;\r\n  \r\n        const existingProduct = this.productList.find(\r\n          item => item.id === this.selectedProduct.id\r\n        );\r\n  \r\n        if (existingProduct) {\r\n          existingProduct.qty += 1;\r\n          existingProduct.total = (existingProduct.quantity * existingProduct.price).toFixed(2);\r\n        } else {\r\n          const newProduct = {\r\n            ...this.selectedProduct,\r\n            quantity: 1,\r\n            total: this.selectedProduct.price.toFixed(2)\r\n          };\r\n          this.productList.push(newProduct);\r\n        }\r\n      },\r\n  \r\n      // Remove product from the product list\r\n      removeProduct(index) {\r\n        this.productList.splice(index, 1);\r\n      },\r\n  \r\n      // Navigate to the bill generation page\r\n      generateBill() {\r\n        this.$router.push('/invoice');\r\n      }\r\n    },\r\n    created() {\r\n      this.fetchProducts(); // Fetch products on component creation\r\n    }\r\n  };\r\n  </script>\r\n  \r\n\r\n<style scoped>\r\n/* styles.css */\r\nbody {\r\n    font-family: Arial, sans-serif;\r\n    background-color: #f4f4f9;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n.billing-container {\r\n    width: 80%;\r\n    margin: 20px auto;\r\n    background-color: #fff;\r\n    padding: 20px;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.header h1 {\r\n    text-align: center;\r\n    color: #5658d3;\r\n}\r\n\r\n.customer-details,\r\n.product-list,\r\n.billing-summary {\r\n    margin-bottom: 20px;\r\n}\r\n\r\nh2 {\r\n    color: #5658d3;\r\n}\r\n.product-details {\r\n    text-align: center;\r\n    color: #5658d3;\r\n}\r\n\r\nlabel {\r\n    font-weight: bold;\r\n    margin-top: 10px;\r\n    display: block;\r\n}\r\n\r\ninput, textarea {\r\n    width: 100%;\r\n    padding: 8px;\r\n    margin: 8px 0;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n}\r\n\r\ntextarea {\r\n    resize: vertical;\r\n    height: 80px;\r\n}\r\n\r\ntable {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    margin-top: 20px;\r\n}\r\n\r\ntable, th, td {\r\n    border: 1px solid #ddd;\r\n}\r\n\r\nth, td {\r\n    padding: 10px;\r\n    text-align: center;\r\n}\r\n\r\nbutton {\r\n    background-color: #615ef1;\r\n    color: white;\r\n    border: none;\r\n    padding: 10px 15px;\r\n    cursor: pointer;\r\n    border-radius: 4px;\r\n    font-size: 16px;\r\n    margin-top: 10px;\r\n}\r\n\r\nbutton:hover {\r\n    background-color: #3720b9;\r\n}\r\n\r\nfooter {\r\n    text-align: center;\r\n    margin-top: 20px;\r\n    font-size: 14px;\r\n    color: #888;\r\n}\r\n</style>\r\n"],"mappings":";;;;AAyEE,eAAe;EACbA,IAAI,EAAE,MAAM;EACZC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE;QACRF,IAAI,EAAE,EAAE;QACRG,OAAO,EAAE,EAAE;QACXC,OAAO,EAAE;MACX,CAAC;MACDC,QAAQ,EAAE,EAAE;MAAE;MACdC,eAAe,EAAE,IAAI;MAAE;MACvBC,WAAW,EAAE,EAAC,CAAE;IAClB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACF,WAAW,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAE,GAAIC,IAAI,CAACC,KAAK,EAAE,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC;IAC/E,CAAC;IACDC,GAAGA,CAAA,EAAG;MACJ;MACA,OAAO,CAAC,IAAI,CAACN,QAAO,GAAI,GAAG,EAAEK,OAAO,CAAC,CAAC,CAAC;IACzC,CAAC;IACDD,KAAKA,CAAA,EAAG;MACN,OAAO,CAACG,UAAU,CAAC,IAAI,CAACP,QAAQ,IAAIO,UAAU,CAAC,IAAI,CAACD,GAAG,CAAC,EAAED,OAAO,CAAC,CAAC,CAAC;IACtE;EACF,CAAC;EACDG,OAAO,EAAE;IACP;IACAC,aAAaA,CAAA,EAAG;MACdC,KAAK,CAAC,yCAAyC,EAAE;MAAA,CAC9CC,IAAI,CAACC,QAAO,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAChCF,IAAI,CAACnB,IAAG,IAAK;QACZ,IAAI,CAACI,QAAO,GAAIJ,IAAI,EAAE;MACxB,CAAC,EACAsB,KAAK,CAACC,KAAI,IAAKC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC,CAAC;IACrE,CAAC;IAED;IACAE,OAAOA,CAAA,EAAG;MACR,IAAI,CAAC,IAAI,CAACpB,eAAe,EAAE;MAE3B,MAAMqB,eAAc,GAAI,IAAI,CAACpB,WAAW,CAACqB,IAAI,CAC3ChB,IAAG,IAAKA,IAAI,CAACiB,EAAC,KAAM,IAAI,CAACvB,eAAe,CAACuB,EAC3C,CAAC;MAED,IAAIF,eAAe,EAAE;QACnBA,eAAe,CAACG,GAAE,IAAK,CAAC;QACxBH,eAAe,CAACd,KAAI,GAAI,CAACc,eAAe,CAACI,QAAO,GAAIJ,eAAe,CAACK,KAAK,EAAElB,OAAO,CAAC,CAAC,CAAC;MACvF,OAAO;QACL,MAAMmB,UAAS,GAAI;UACjB,GAAG,IAAI,CAAC3B,eAAe;UACvByB,QAAQ,EAAE,CAAC;UACXlB,KAAK,EAAE,IAAI,CAACP,eAAe,CAAC0B,KAAK,CAAClB,OAAO,CAAC,CAAC;QAC7C,CAAC;QACD,IAAI,CAACP,WAAW,CAAC2B,IAAI,CAACD,UAAU,CAAC;MACnC;IACF,CAAC;IAED;IACAE,aAAaA,CAACC,KAAK,EAAE;MACnB,IAAI,CAAC7B,WAAW,CAAC8B,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IACnC,CAAC;IAED;IACAE,YAAYA,CAAA,EAAG;MACb,IAAI,CAACC,OAAO,CAACL,IAAI,CAAC,UAAU,CAAC;IAC/B;EACF,CAAC;EACDM,OAAOA,CAAA,EAAG;IACR,IAAI,CAACtB,aAAa,CAAC,CAAC,EAAE;EACxB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}